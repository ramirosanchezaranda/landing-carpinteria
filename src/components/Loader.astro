---
interface Props {
  fullScreen?: boolean;
}

const { fullScreen = true } = Astro.props;
---

<div 
  id="page-loader"
  class:list={[
    'loader', 
    fullScreen ? 'fixed inset-0 z-[9999] bg-white flex items-center justify-center' : ''
  ]}
>
  <div class="drill-loader">
    <div class="drill-container">
      <div class="drill-body"></div>
      <div class="drill-bit"></div>
    </div>
  </div>
</div>

<style>
.loader {
  background-color: white;
  display: flex;
  justify-content: center;
  align-items: center;
  width: 100%;
  height: 100%;
}

.drill-loader {
  display: flex;
  justify-content: center;
  align-items: center;
  width: 200px;
  height: 200px;
}

.drill-container {
  position: relative;
  width: 100px;
  height: 150px;
}

.drill-body {
  position: absolute;
  bottom: 0;
  left: 25px;
  width: 50px;
  height: 100px;
  background-color: #333;
  border-radius: 10px 10px 0 0;
  animation: drill-shake 0.1s infinite alternate;
}

.drill-bit {
  position: absolute;
  top: -30px;
  left: 40px;
  width: 20px;
  height: 40px;
  background-color: #FF6B00;
  clip-path: polygon(50% 0%, 0% 100%, 100% 100%);
  animation: spin 0.3s linear infinite;
}

@keyframes spin {
  0% {
    transform: rotate(0deg);
  }
  100% {
    transform: rotate(360deg);
  }
}

@keyframes drill-shake {
  0% {
    transform: translateX(-2px);
  }
  100% {
    transform: translateX(2px);
  }
}
</style>

<script is:inline>
  document.addEventListener('DOMContentLoaded', () => {
    const loader = document.getElementById('page-loader');
    if (loader) {
      window.addEventListener('load', () => {
        loader.classList.add('opacity-0');
        setTimeout(() => {
          loader.style.display = 'none';
        }, 500);
      });
    }
  });
</script>